name: Build and run tests
on:
  push:
  # pull_request: # Don't run twice
jobs:
  flakes-simple:
    strategy:
      matrix:
        include:
          - ghc: ghc-9.2.5
            allow-failure: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v18
        with:
          install_url: https://github.com/nix-community/nix-unstable-installer/releases/download/nix-2.14.0pre20230224_92611e6/install
        # Configure Nix to enable flakes
          extra_nix_config: |
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v12
        with:
          name: cclaw
          # If you chose signing key for write access
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
          # If you chose API tokens for write access OR if you have a private cache
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - uses: haskell/actions/setup@v1
        with:
          ghc-version: '9.2.5' # Exact version of ghc to use
          # cabal-version: 'latest'. Omitted, but defaults to 'latest'
          enable-stack: true
          stack-version: '2.9.1'
      - uses: actions/cache@v2.1.5
        name: Cache ~/.stack
        with:
          path: ~/.stack
          key: ${{ runner.os }}-${{ matrix.ghc }}-stack-${{ hashFiles('stack.yaml.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-stack
      - name: Install libcurl
        run: sudo apt-get  install libcurl4-openssl-dev
      - name: Initial nix develop
        run: nix develop -L --profile .dev-profile -c sh -c 'which stack; which gf; which ghc; echo $GF_LIB_PATH'
      - name: stack deps
        run: nix develop --profile .dev-profile -c stack build --nix --no-nix-pure --test --only-dependencies
      - name: stack build
        # if: ${{ false }}
        run: nix develop --profile .dev-profile -c stack build --nix --no-nix-pure --test --no-run-tests
      - name: stack test
        # if: ${{ false }}
        run: nix develop --profile .dev-profile -c stack test --nix --no-nix-pure
