# l4version 0.3.4

# pending: sub-conditions
# pending: define grammars for 'subject to', 'condition', 'date' & 'time'(?)



lexicon
Business -> business_2 #from WordNet
Value -> value_1 

# Business.value -> foo_42 from Sumo

# BusinessEntity.value -> foo_43 from WordNet


class Business {
      foo: Int
      bar: Bool -> (Int,Int)
}

class LawRelatedService extends Business {
}

class BusinessEntity {
}

class Appointment {
}

class Person {
}

class LegalPractitioner extends Person {
}

class LocumSolicitor extends LegalPractitioner {
}

decl AssociatedWith: LegalPractitioner -> Appointment -> Bool
decl AssociatedWithAppB: Appointment -> Business -> Bool
decl AssociatedWithAppBE: Appointment -> BusinessEntity -> Bool

decl SubjectTo : LegalPractitioner -> Appointment -> Bool
decl MayAcceptApp : LegalPractitioner -> Appointment -> Bool
decl MustNotAcceptApp : LegalPractitioner -> Appointment -> Bool

decl IncompatibleDignity : Business -> Bool
decl MateriallyInterferes : Business -> Bool
decl UnfairAttractBusiness : Business -> Bool
decl ShareLPRFees : Business -> Bool
decl BusinessFirstSchedule : Business -> Bool
decl ProhibitedBusiness : Business -> Bool

# use the following declarations instead of the commented 'extends' classes ??
# decl LawRelatedService: Business -> Bool
# decl LocumSolicitor: LegalPractitioner -> Bool


# SECTION 34

rule <r1a>
for lpr: LegalPractitioner, app: Appointment
if (exists bsn : Business. AssociatedWithAppB app bsn && IncompatibleDignity bsn)
then MustNotAcceptApp lpr app

rule <r1b>
for lpr: LegalPractitioner, app: Appointment
if (exists bsn : Business. AssociatedWithAppB app bsn && MateriallyInterferes bsn)
then MustNotAcceptApp lpr app

rule <r1c>
for lpr: LegalPractitioner, app: Appointment
if (exists bsn : Business. AssociatedWithAppB app bsn && UnfairAttractBusiness bsn)
then MustNotAcceptApp lpr app

rule <r1d>
for lpr: LegalPractitioner, app: Appointment
if (exists bsn : Business. AssociatedWithAppB app bsn && ShareLPRFees bsn)
then MustNotAcceptApp lpr app

rule <r1e>
for lpr: LegalPractitioner, app: Appointment
if (exists bsn : Business. AssociatedWithAppB app bsn && BusinessFirstSchedule bsn)
then MustNotAcceptApp lpr app

rule <r1f>
for lpr: LegalPractitioner, app: Appointment
if (exists bsn : Business. AssociatedWithAppB app bsn && ProhibitedBusiness bsn)
then MustNotAcceptApp lpr app

# first condition of IF: neg. of precond of rule 1a
rule <r5>
# for lpr: LegalPractitioner, app: Appointment
# Integrated the fact LocumSolicitor lpr in the declaration
for lpr: LocumSolicitor, app: Appointment
if not (exists bsn : Business. AssociatedWith app bsn && IncompatibleDignity bsn) &&
   (forall bse : BusinessEntity. AssociatedWithApp app bse -->
                  not (exists srv : Business.  LawRelatedService srv && Provides bse srv) &&
                  ConditionsSecondSchedule lpr bse)
then 
App lpr app

assert exists lpr: LegalPractitioner. exists app: Appointment. MayAcceptApp lpr app
